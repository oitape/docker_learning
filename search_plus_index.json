{"./":{"url":"./","title":"Introduction","keywords":"","body":"从Docker实战 这本书中的学习总结 Welcome to Docker! Happy Everyone! By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"chapter1.html":{"url":"chapter1.html","title":"Docker的世界","keywords":"","body":"什么是docker？ docker是一个命令行程序、一个后台守护进程，以及一组远程服务。它能够简化安装、运行、发布和删除软件。通过使用一项UNIX技术——即容器技术。 容器不是虚拟化的 传统的的程序通常采用硬件虚拟化，以提供隔离。虚拟机提供虚拟的硬件，安装操作系统和其他程序，需要花费很长的时间来创建，且非常消耗资源，不仅要运行我们需要执行的软件，还需要运行整个操作系统的副本。 而docker容器不适用硬件虚拟化。运行在Docker中的程序接口和主机的Linux直接打交道，因为容器中运行的程序和计算机的操作系统之间没有额外的中间层，没有资源冗余软件的运行 docker构建容器隔离包括8个方面 PID命名空间——进程标识符和能力 UTS命名空间——主机名和域名 MNT命名空间——文件系统访问和机构 IPC命名空间——通过共享内存的进程间通信 NET命名空间——网络访问和结构 USR命名空间——用户名和标识 chroot（）——控制文件系统根目录的位置 cgroups——资源保护 简单示例 docker run dockerinaction/hello_world. By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"rong-qi-zhong-yun-xing-ruan-jian.html":{"url":"rong-qi-zhong-yun-xing-ruan-jian.html","title":"容器中运行软件","keywords":"","body":" By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"rong-qi-zhong-yun-xing-ruan-jian/213001-ru-hexue-xi-docker-ming-ling.html":{"url":"rong-qi-zhong-yun-xing-ruan-jian/213001-ru-hexue-xi-docker-ming-ling.html","title":"如何学习docker命令","keywords":"","body":"如何学习docker命令 通过 docker help 将显示Docker命令行工具的基本语法，以及所有命令的完整列表。 查看某一个具体命令的功能可通过该如下来显示该命令的作用。 docker help example： docker help version By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"rong-qi-zhong-yun-xing-ruan-jian/jian-li-yi-ge-wang-zhan-jian-kong-qi.html":{"url":"rong-qi-zhong-yun-xing-ruan-jian/jian-li-yi-ge-wang-zhan-jian-kong-qi.html","title":"建立一个网站监控器","keywords":"","body":" 运行NGINXdocker run --detach --name web nginx:latest 运行此命令，Docker将从Docker Hub上的NGINX仓库下载、安装、运行该镜像软件，运行结束还有一串类似这样的数字 785e0931595766c33ee34e393fdb15955371c60072c218b5b131232487bc1282 这是运行NGINX容器的唯一标识符，标识符显示出来后，并不会发生什么，因为使用了--detach选项，并在后台启动该程序 静默运行在在后台的程序被称作守护程序，当你要在后台运行容器的守护程序，记得使用--detach标志或者它的缩写形式-d 运行邮件程序 docker run -d --name mailer dockerinaction/ch2_mailer 运行交互式容器 docker run --interactive --tty \\ --link web:web \\ --name web_test \\ busybox:latest /bin/sh --interactive：告诉Docker保持标准输入流对容器开放，即使容器没有终端连接。 --tty：告诉Docker为容器分配一个虚拟终端，这将允许你发送信号给容器。 用交互式容器的命令创建一个容器，启动一个UNIX shell，命令被链接到运行NGINX的容器上。 启动监控器docker run -it \\ --name agent \\ --link web:insideweb \\ --link mailer:insidemailer \\ dockerinaction/ch2_agent 会看到终端一直在打印 System up 如果需要后台运行 添加-d选项即可，（注意：暂停agent时【command + c】时，要先执行docker rm agent，再次尝试后台运行agent，你会看到终端不会再有相关log信息） 可通过 docker logs -f agent来实时输出信息。 By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"rong-qi-zhong-yun-xing-ruan-jian/233001-lie-ju-3001-ting-zhi-3001-zhong-qi-3001-cha-kan-rong-qi-shu-chu.html":{"url":"rong-qi-zhong-yun-xing-ruan-jian/233001-lie-ju-3001-ting-zhi-3001-zhong-qi-3001-cha-kan-rong-qi-shu-chu.html","title":"列举、停止、重启、查看容器输出","keywords":"","body":" 正在运行容器查看 docker ps 类似下面的信息 CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6328d9ca7c6b dockerinaction/ch2_agent \"/watcher/watcher.sh\" 6 minutes ago Up 5 minutes agent 容器ID 使用的镜像 容器中执行的命令 容器运行时长 容器暴露的网络端口 容器名称 重启容器 docker restart 查看日志 docker logs docker logs 命令有一个选项，--follow 或者 -f ,用来显示整个日志,容器中日志的变化将实时在终端当中呈现。 测试当web服务器停止时会不会发出通知。 docker stop web 等待几秒钟，执行docker logs mailer 如果看到终端输出 Sending email: To: admin@work Message: The service is down! 说明监控成功检测到Web同期中NGINX服务器已经停止。 By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "},"33001-yi-jie-jue-de-wen-ti-he-pid-ming-ming-kong-jian.html":{"url":"33001-yi-jie-jue-de-wen-ti-he-pid-ming-ming-kong-jian.html","title":"已解决的问题和PID命名空间","keywords":"","body":"什么是PID 每一个运行的程序或进程，在Linux中都有唯一一个编号，叫做进程标识符即PID。 一个PID命名空间是一组识别进程的数字。Linux提供了工具可以创建多个PID命名空间，每个命名空间拥有一套完整的PID。 By oitm，使用知识共享 署名-相同方式共享 4.0协议发布            此页面修订于： 2019-02-28 15:29:18 "}}